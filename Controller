스프링 MVC의 Controller

- Controller 특징
	* HttpServletRequest, HttpServletResponse를 사용하지 않고 구현 가능
	* 다양한 타입의 파라미터 처리, 다양한 타입의 리턴 타입 사용 가능
	* GET방식, POST방식 등 전송방식에 대한 처리를 어노테이션으로 처리 가능
	* 상속/인터페이스 방식 대신에 어노테이션만으로도 필요한 설정 가능

- @RequestMapping : 현재 클래스의 모든 메서드들의 기본적인 URL경로가 됨.
	* 만약 경로를 "/sample/*" 로 지정했다면 url은 /sample/aaa 로 처리
	* 속성 추가
		* Method 속성은 GET방식과 POST방식을 구분해서 사용하고자 할떄 사용 (스프링 4.3버전부터는 @GetMapping, @PostMapping 로 구현 가능)

- @Log는 java.util.Logging를 이용하는 반면 / @Log4j는 Log4j 라이브러리를 활용

- 파라미터 수집 기능
	* request.getParameter() 를 이용할 필요 없이 자동으로 파라미터 수집 가능
	* lombok의 @Data 어노테이션을 이용하면 getter/setter, equals(), toString() 등의 메서드를 자동생성해줌.
	* Controller가 파라미터를 수집하는 방식은 파라미터 타입에 따라 자동으로 변환하는 방식을 이용
	* 리스트나 배열처리 가능 (동일한 이름의 파라미터가 여러개 전달되는 경우 ArrayList<> 등을 이용)

!! Tomcat은 버전에 따라 url창의 문자열에서 "[", "]" 문자를 특수문자로 허용하지 않을 수 있음
	* 그럴때에는 [ = %5B  //  ] = %5D 로 변경하여 입력

- @InitBinder
	* 파라미터의 수집을 다른 용어로는 binding(바인딩) 이라고 함
	* 변환이 가능한 데이터는 자동으로 변환되지만 경우에 따라서는 파라미터를 변환해서 처리해야하는 경우도 있음.
	* 예로 화면에서 2022-05-05 와 같이 문자열로 전달된 데이터를 java.util.Date 타입으로 변환하는 작업을 들 수 있는데 이럴 경우 파라미터를 바인딩할 때 자동으로 호출되는 @InitBinder를 이용해서 이러한 변환을 처리할 수 있음.
	* 테스트 출력결과 : INFO : org.zerock.controller.SampleController - todo : TodoDTO(title=test, dueDate=Thu May 05 00:00:00 KST 2022)

- @DateTimeFormat
	* @InitBinder를 이용해서 날짜 변환이 가능하지만 파라미터로 사용되는 인스턴스 변수에 @DateTimeFormat을 적용해도 변환이 가능/ 둘 중에 하나만 적용하면 됨.

- 데이터전달자 *Model*
	* Controller의 메서드를 작성할 때는 특별하게 Model이라는 타입을 파라미터로 지정할 수 있음
	* Model객체는 JSP에 컨트롤러에서 생성된 데이터를 담아서 전달하는 역할을 하는 존재, 이를 이용해서 JSP와 같은 뷰(View)로 전달해야하는 데이터를 담아 보낼수 있음.
	* Model은 모델2 방식에서 사용하는 request.setAttribute()와 유사한 역할을 함.
	* Model은 주로 Controller에 전달된 데이터를 이용해서 추가적인 데이터를 가져와야하는 상황에서 사용
	* @ModelAttribute 어노테이션 : 강제로 전달받은 파라미터를 Model에 담아서 전달하도록 할 때 필요한 어노테이션
		* @ModelAttribute가 걸린 파라미터는 타입과 관계없이 무조건 Model에 담아서 전달되므로, 파라미터로 전달된 데이터를 다시 화면에서 사용할 경우 유용하기 사용 됨.
		* ex) public String ex04(sampleDTO dto, @ModelAttribute("page") int page) {	} / 만약 어노테이션이 없다면 page에 값을 입력해도 화면에는 출력되지 않음.
    [console창에만 아래와 같이 출력됨. /
    INFO : org.zerock.controller.SampleController - dto : sampleDTO(name=aaa, age=11)
    INFO : org.zerock.controller.SampleController - page : 9 
    ]

- Controller의 리턴타입
	* 스프링 MVC 구조가 기존의 상속과 인터페이스에서 어노테이션을 사용하는 방식으로 바뀌면서 리턴 타입이 자유로워 짐.
	* 리턴타입 종류
		* String : jsp를 이용하는 경우에는 jsp 파일의 경로와 파일이름을 아타내기 위해서 사용
			* 상황에 따라 다른 화면을 보여줄 필요가 있을 경우 유용하게 사용(if ~else와 같은 처리가 필요한 상황)
			* String 타입에는 키워드를 붙여 사용가능
				* redirect : 리다이렉트 방식으로 처리하는 경우
				* forward : 포워드 방식으로 처리하는 경우
		* void : 호출하는 URL과 동일한 이름의 jsp를 의미(해당 URL의 경로를 그대로 jsp 파일의 이름으로 사용)
		* VO, DTO타입 : 주로 JSON 타입의 데이터를 만들어 반환하는 용도로 사용
		* ResponseEntity 타입 : response 할 때 Http 헤더 정보와 내용을  가공하는 용도로 사용
		* Model, ModelAndView : Model로 데이터를 반환하거나 화면까지 같이 지정하는 경우에 사용
		* HttpHeaders : 응답에 내용 없이 Http헤더 메시지만 전달하는 용도로 사용
